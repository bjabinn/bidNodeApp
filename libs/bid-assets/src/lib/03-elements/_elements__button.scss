////
/// BUTTON element
///
/// Here we got the button styles
////
@mixin button-size(
    $padding-y,
    $padding-x,
    $font-size,
    $line-height,
    $border-radius
) {
    padding: $padding-y $padding-x;
    @include font-size($font-size);
    line-height: $line-height;
    // Manually declare to provide an override to the browser default
    @include border-radius($border-radius);
}

button,
.k-button,
.btn {
    display: inline-block;
    font-family: $btn-font-family;
    font-weight: $btn-font-weight;
    color: $body-color;
    text-align: center;
    white-space: $btn-white-space;
    vertical-align: middle;
    cursor: if($enable-pointer-cursor-for-buttons, pointer, null);
    user-select: none;
    background-color: $transparent;
    border: $btn-border-width solid $transparent;
    outline: none;
    @include button-size(
        $btn-padding-y,
        $btn-padding-x,
        $btn-font-size,
        $btn-line-height,
        $btn-border-radius
    );
    @include transition($btn-transition);

    @include hover() {
        color: $body-color;
        text-decoration: none;
    }

    &:focus,
    &.focus {
        outline: 0;
        @include box-shadow(none);
    }

    fieldset:disabled &,
    &[disabled],
    &.disabled,
    &:disabled {
        pointer-events: none;
        cursor: not-allowed;
        opacity: $btn-disabled-opacity;
        @include box-shadow(none);
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
        @include box-shadow($btn-active-box-shadow);

        &:focus {
            @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
        }
    }
    &.btn-100 {
        display: block;
        width: 100%;
        margin-bottom: rem(8);
    }
}

//
// Alternate buttons
//
@each $color, $value in $theme-colors {
    .btn-#{$color} {
        @include button-variant($value, $value);
        &.btn,
        &.btn.focus,
        &.btn:focus,
        &.btn.hover,
        &.btn:hover,
        &.btn:not(:disabled):not(.disabled):active,
        &.btn:not(:disabled):not(.disabled).active,
        .show > &.btn.dropdown-toggle {
            border-color: $transparent;
            box-shadow: none;
        }
    }
}
.btn-secondary {
    color: $primary;
}
.btn-warning {
    color: $danger;
    &.disabled,
    &:disabled {
        color: $danger;
    }
}
.btn-tertiary {
    color: $black;
    background-color: $gray-200;
}

//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
    font-weight: $font-weight-normal;
    color: $link-color;
    text-decoration: $link-decoration;
    background: $transparent;
    border-color: $transparent;

    @include hover() {
        color: $link-hover-color;
        text-decoration: $link-hover-decoration;
        background: $transparent;
        border-color: $transparent;
    }

    &:focus,
    &.focus {
        text-decoration: $link-hover-decoration;
        box-shadow: none;
        background: $transparent;
        border-color: $transparent;
    }

    &:disabled,
    &.disabled {
        color: $btn-link-disabled-color;
        pointer-events: none;
        background: $transparent;
        border-color: $transparent;
    }

    // No need for an active state here
}

//
// Block button
//

.btn-block {
    display: block;
    width: 100%;

    // Vertically space out multiple block buttons
    + .btn-block {
        margin-top: $btn-block-spacing-y;
    }
}

// Specificity overrides
input[type='submit'],
input[type='reset'],
input[type='button'] {
    &.btn-block {
        width: 100%;
    }
}

.btn-lg {
    @include button-size(
        $btn-padding-y-lg,
        $btn-padding-x-lg,
        $btn-font-size-lg,
        $btn-line-height-lg,
        $btn-border-radius-lg
    );
}

.btn-sm {
    @include button-size(
        $btn-padding-y-sm,
        $btn-padding-x-sm,
        $btn-font-size-sm,
        $btn-line-height-sm,
        $btn-border-radius-sm
    );
}

//
// Toggleable button
//
.k-button-group .btn,
.k-button-group .k-button {
    &[ng-reflect-toggleable] {
        border: rgba(0, 0, 0, 0);
        padding: rem(10) rem(15);
        min-width: rem(56);
        font-weight: $font-weight-normal;
        color: color('primary');
        background-color: color('secondary');
        background-image: none;
        font-size: rem(18);
        &,
        &:first-child,
        &:last-child {
            border-radius: rem(20);
            width: 9.85rem;
        }
        &:hover,
        &.hover,
        &:focus,
        &.focus {
            box-shadow: rem(0) rem(4) rem(8) rgba(0, 0, 0, 0.25);
            text-shadow: rem(1) rem(0) rem(0) color('primary');
        }
        &:active,
        &.k-state-active,
        &.k-state-selected {
            background-color: color('orange');
            border-color: color('orange');
            background-image: none;
            text-shadow: rem(1) rem(0) rem(0) color('white');
            color: $black;
            color: $white;
            @each $color, $value in $theme-colors {
                &.btn-#{$color} {
                    background: $value;
                    border-color: $transparent;
                }
            }
        }
    }
}

//
// Upload document button
//
.k-button.k-button--document {
    width: rem(283);
    min-height: rem(239);
    background-color: color('white');
    background-image: none;
    border: 1px solid rgba(0, 0, 0, 0.08);
    border-radius: rem(10);
    box-shadow: 3px 4px 16px rgba(216, 216, 216, 0.13);
    display: flex;
    flex-direction: column;
    margin-bottom: rem(20);

    .btn-icon {
        font-size: rem(30);
        padding: rem(10);
        color: color('primary');
        background-color: color('secondary');
        border-radius: 50%;
        width: rem(56);
        height: rem(56);
        line-height: rem(36);
        margin-bottom: rem(16);
    }

    .btn-label {
        font-size: rem(16);
        color: color('primary');
        font-weight: bold;
    }

    &[disabled] {
        .btn-icon {
            color: color('gray-700');
            background-color: color('gray-500');
        }
        .btn-label {
            color: color('gray-700');
        }
    }
}

//
// Download PDF button
//
.k-button.k-button--pdf {
    background-image: none;
    font-size: rem(16);
    position: relative;
    border: none;

    .bid-icon {
        margin-right: rem(10);
    }

    &:hover {
        color: color('white');
        background-color: color('primary');
    }
    &:focus {
        box-shadow: none;
    }
}

//
// Small button
//
.k-button.k-button--sm {
    padding: rem(8) rem(16);
}

//
//Footer buttons
//
.btn-footer {
    color: color('white');
    background-color: color('primary');
    &:disabled,
    &.disabled {
        background-color: color('gray-500');
        opacity: 1;
    }
}
